apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    version: "{{ .Values.imageTag }}"
spec:
  replicas: {{default 1 .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        version: "{{ .Values.imageTag }}"
      annotations:
        "helm.sh/created": {{ .Release.Time.Seconds | quote }}
        {{- if .Values.mariadb.enabled }}
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "create-database-{{ .Release.Name }}",
                "image": "orangesys/alpine-job:0.1.7",
                "command": ["mysql", "-h", "{{ .Values.mariadb.host }}", "-e", "CREATE DATABASE IF NOT EXISTS {{ template "mariadb.name" . }}"]
              }
            ]'
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: {{ template "fullname" . }}
        image: "orangesys/alpine-grafana:{{.Values.imageTag}}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: "{{.Values.cpu}}"
            memory: "{{.Values.memory}}"
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-config
          mountPath: /grafana/conf
      volumes:
      - name: grafana-config
        configMap:
          name: {{ template "fullname" . }}
