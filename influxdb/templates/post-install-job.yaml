apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "fullname" . }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  #annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
  #  "helm.sh/hook": post-install
spec:
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      restartPolicy: Never
      containers:
      - name: {{ template "fullname" . }}
        image: asia.gcr.io/orange-sys/alpine-job:0.1.0
        env:
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: admin-password
        - name: READ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: read-password
        - name: WRITE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: write-password
        command: ["/bin/ash", "-c"]
        args:
          # FIXME use kubernetes probe instead of "until curl"
          #  until $(curl -s --fail --connect-timeout 2 --output /dev/null http://{{ template "fullname" . }}/ping); do
          #    printf '.' ; sleep 1 ;
          #  done ;
          #  sleep 45;
          - >
            until $(http --check-status --ignore-stdin --timeout=1 http://{{ template "fullname" . }}:8086/ping &> /dev/null); do
              printf '.'; sleep 1;
            done ;
            echo "create admin user ";
            http POST http://{{ template "fullname" . }}:8086/query \
              q=="CREATE USER admin WITH PASSWORD '${ADMIN_PASSWORD}' WITH ALL PRIVILEGES";
            echo "create telegraf database and users";
            http -a admin:${ADMIN_PASSWORD} POST http://{{ template "fullname" . }}:8086/query \
              q=="CREATE DATABASE {{ .Values.Database }};\
                  CREATE USER _write WITH PASSWORD '${WRITE_PASSWORD}';\
                  CREATE USER _read WITH PASSWORD '${READ_PASSWORD}';\
                  GRANT WRITE on telegraf TO _write;\
                  GRANT READ on telegraf TO _read;"
